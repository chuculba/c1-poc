<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
	xmlns:cxf="http://camel.apache.org/schema/blueprint/cxf"
	xmlns:http-conf="http://cxf.apache.org/transports/http/configuration">

	<cxf:cxfEndpoint id="addressEndpoint" address="http://localhost:8185/address"
		serviceClass="org.poc.ws.AddressEndpoint" xmlns:ns="suncorp-com-au:schema:enterprise:getaddress:2012:05" />

	<bean id="aggregateResponseStrategy" class="org.poc.transformer.AggregateResponseStrategy" />

	<bean id="aggregateRequestsStrategy" class="org.poc.transformer.AggregateRequestsStrategy" />

	<!-- <import resource="classpath:META-INF/cxf/cxf.xml"/> -->

	<http-conf:conduit name="*.http-conduit">
		<http-conf:client ReceiveTimeout="2000" />
	</http-conf:conduit>

	<bean id="noErrorHandler" class="org.apache.camel.builder.NoErrorHandlerBuilder" />

	<camelContext id="address-service-context"
		xmlns="http://camel.apache.org/schema/blueprint" errorHandlerRef="noErrorHandler">
		
		<onException>
			<exception>java.lang.Exception</exception>
			<continued><constant>true</constant></continued>
		</onException>		
		
		<route id="addressRoute">
			<from uri="cxf:bean:addressEndpoint?dataFormat=MESSAGE" />
			<convertBodyTo type="java.lang.String" />
			<log message="Incoming message ${body}" />

			<!-- Split all the messages -->
			<to uri="xslt:xsl/ConsumerSplitTransform.xsl?saxon=true" />
			
			<split streaming="true" parallelProcessing="true" strategyRef="aggregateResponseStrategy">
				<tokenize token="Service" xml="true"  />
				<choice>
					<when>
						<xpath>//SystemID/text() = 'AAA'</xpath>
					</when>
					<when>
						<xpath>//SystemID/text() = 'BBB'</xpath>
						<transform>
							<simple>&lt;root&gt;${body}&lt;&#47;root&gt;</simple>
						</transform>
						<to uri="xslt:xsl/BBBRequestTransform.xsl" />
						<to	uri="cxf:http://localhost:8186/BBB?wsdlURL=wsdl/BBB.wsdl&amp;dataFormat=MESSAGE" />
						<to uri="xslt:xsl/BBBResponseTransform.xsl" /> 
					</when>
					<when>
						<xpath>//SystemID/text() = 'CCC'</xpath>
						<setHeader headerName="serviceId">
							<simple>CCC</simple>
						</setHeader>
						<split streaming="true" parallelProcessing="true" strategyRef="aggregateResponseStrategy">
							<tokenize token="Product" xml="true"  />
							<to uri="xslt:xsl/CCCRequestTransform.xsl" />
							<to	uri="cxf:http://localhost:8187/CCC?wsdlURL=wsdl/CCC.wsdl&amp;dataFormat=MESSAGE" />
							<convertBodyTo type="java.lang.String"/>
							<to uri="xslt:xsl/CCCResponseTransform.xsl" />
						</split>
					</when>
				</choice>
			</split>

			<!-- Comes back from the split here -->
			<transform>
				<simple>&lt;root&gt;${body}&lt;&#47;root&gt;</simple>
			</transform>
			<to uri="xslt:xsl/ConsumerResponseTransform.xsl" />
		</route>


		<route id="ExceptionHandling">
			<from uri="direct:handleException" />
			<setHeader headerName="number">
				<simple>id</simple>
			</setHeader>
			<setHeader headerName="description">
				<simple>Exception thrown ${exception.message}</simple>
			</setHeader>
			<setHeader headerName="source">
				<simple>${header.serviceId}</simple>
			</setHeader>
			<log message="Exception thrown in service ${header.source} Description ${header.source} Message ${body}" />
			<to uri="xslt:xsl/ErrorResponseTransform.xsl" />
		</route>


	</camelContext>


</blueprint>